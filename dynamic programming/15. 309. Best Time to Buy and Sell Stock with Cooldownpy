# https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/description/

#%%
from functools import lru_cache


class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        @lru_cache(None)
        def dfs(level, brought=False, profits=0):
            # level -> indicate price day
            # brought -> if true can sell
            if level>=len(prices): 
                return profits

            pro = 0 
            if brought:
                pro  = max(pro, dfs(level+2, False, profits+prices[level]))# sell
                pro  = max(pro, dfs(level+1, True, profits))
            else:
                pro  = max(pro, dfs(level+1, True, profits-prices[level]))
                pro  = max(pro, dfs(level+1, False, profits))
            
            return pro
        
        return dfs(0)

s = Solution()
# %%
s.maxProfit(
    prices = [1,2,3,0,2]
)
# %%
